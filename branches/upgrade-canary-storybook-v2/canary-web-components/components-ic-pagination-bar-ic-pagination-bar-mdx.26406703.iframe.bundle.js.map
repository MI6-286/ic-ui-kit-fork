{"version":3,"file":"components-ic-pagination-bar-ic-pagination-bar-mdx.26406703.iframe.bundle.js","mappings":";;;;;;;AAoXA;;;;;;;AA4BA;;;;;;;AA4BA;;;;;;;AA4BA;;ACrbA;;;;;AAYA;;;;;AAYA;;;;;;;AAcA;;;;;;;;AAeA;;;;;;AAaA;;;;;;;AAcA;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;AA0BA;;;;;;;;;;AAiBA;;;;;;;AAcA;;;;;;;;AAeA","sources":["webpack://@ukic/canary-web-components/./src/components/ic-pagination-bar/ic-pagination-bar.mdx","webpack://@ukic/canary-web-components/./src/components/ic-pagination-bar/ic-pagination-bar.stories.js"],"sourcesContent":["\nimport React from 'react';\n\n/*prettier-ignore*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/home/runner/work/ic-ui-kit/ic-ui-kit/packages/canary-web-components/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta, Description, Canvas, Story} from \"@storybook/blocks\";\nimport readme from \"./readme.md\";\nimport {html} from \"lit-html\";\nimport * as IcPaginationBarStories from \"./ic-pagination-bar.stories\";\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h3: \"h3\",\n    h4: \"h4\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: IcPaginationBarStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"canary-pagination-bar\",\n      children: \"[Canary]: Pagination Bar\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Use the pagination bar when large amounts of content are split across multiple pages and various pagination options are required.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There is one required attribute for the pagination bar:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"total-items: \", _jsx(_components.code, {\n          children: \"number\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Click the 'Component API' tab to view all the available attributes, events and slots for pagination bar.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To use the pagination bar component, import \", _jsx(_components.code, {\n        children: \"@ukic/canary-web-components\"\n      }), \" into your application.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"basic\",\n      children: \"Basic\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A basic example using the \", _jsx(_components.code, {\n        children: \"total-items\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.Basic\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"basic-code-example\",\n      children: \"Basic code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar total-items=\\\"100\\\"></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Pagination bar will display the number of pages out of the total number of pages as well as the \", _jsx(_components.code, {\n        children: \"simple\"\n      }), \" pagination type.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default, the items per page is set to 10. If the total items is greater than 100, the default items per page is set to 25.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"items-per-page-control\",\n      children: \"Items per page control\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To display the items per page control, set the \", _jsx(_components.code, {\n        children: \"show-items-per-page-control\"\n      }), \" attribute to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.ItemsPerPageControl\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"items-per-page-control-code-example\",\n      children: \"Items per page control code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The items per page control will display a dropdown with options to select the number of items to display per page. Customize the options by setting the \", _jsx(_components.code, {\n        children: \"itemsPerPageOptions\"\n      }), \" property.\\n\", _jsx(_components.code, {\n        children: \"itemsPerPageOptions\"\n      }), \" is an array of objects with \", _jsx(_components.code, {\n        children: \"label\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"value\"\n      }), \" properties. If more than three options are provided, the dropdown will display the first three options and an 'All' option.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"items-per-page-options-code-example\",\n      children: \"Items per page options code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n></ic-pagination-bar>\\n<script>\\n  const paginationBar = document.querySelector(\\\"ic-pagination-bar\\\");\\n  paginationBar.itemsPerPageOptions = [\\n    { label: \\\"50\\\", value: \\\"50\\\" },\\n    { label: \\\"100\\\", value: \\\"100\\\" },\\n    { label: \\\"250\\\", value: \\\"250\\\" },\\n  ];\\n</script>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"go-to-page-control\",\n      children: \"Go to page control\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To display the go to page control, set the \", _jsx(_components.code, {\n        children: \"show-go-to-page-control\"\n      }), \" attribute to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \". 'Go to page' allows the user to jump to a specific page. If the page number is invalid, the input will be styled in the \", _jsx(_components.code, {\n        children: \"ic-status-error\"\n      }), \" colour with a tooltip detailing the error.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.GoToPageControl\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"go-to-page-control-code-example\",\n      children: \"Go to page control code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"pagination-range-label-type\",\n      children: \"Pagination range label type\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The pagination range label type can be set to two types:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"simple\"\n        }), \": [default]: Display the total number of pages and the current page number.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"data\"\n        }), \": Displays the total number of items and the items range.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The example below uses the \", _jsx(_components.code, {\n        children: \"data\"\n      }), \" pagination range label type. The range is updated when the page is changed.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.PaginationRangeLabelType\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"pagination-range-label-type-code-example\",\n      children: \"Pagination range label type code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n  range-label-type=\\\"data\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"pagination-item-label\",\n      children: \"Pagination item label\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"'Item' can be changed to a custom label by setting the \", _jsx(_components.code, {\n        children: \"item-label\"\n      }), \" attribute. Any occurrences of 'Item' in the pagination bar will be replaced with the custom label.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.PaginationItemLabel\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"pagination-range-item-label-code-example\",\n      children: \"Pagination range item label code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n  range-label-type=\\\"data\\\"\\n  item-label=\\\"Image\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"pagination-type\",\n      children: \"Pagination type\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The pagination type can be set to two types:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"simple\"\n        }), \": [default]: Display the current page as a label with back and next buttons.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"complex\"\n        }), \": Displays all the page numbers as buttons with back and next buttons.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"complex\"\n      }), \" pagination type is useful when there are many pages to navigate through.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.PaginationType\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"pagination-type-code-example\",\n      children: \"Pagination type code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  type=\\\"complex\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"alignment\",\n      children: \"Alignment\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The pagination elements can be aligned to the \", _jsx(_components.code, {\n        children: \"right\"\n      }), \" (default), \", _jsx(_components.code, {\n        children: \"left\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"space-between\"\n      }), \". The default alignment is right.\"]\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"alignment-left\",\n      children: \"Alignment left\"\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.AlignmentLeft\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"alignment-left-code-example\",\n      children: \"Alignment left code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  alignment=\\\"left\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"alignment-space-between\",\n      children: \"Alignment space between\"\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.AlignmentSpaceBetween\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"alignment-space-between-code-example\",\n      children: \"Alignment space between code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  alignment=\\\"space-between\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"appearance\",\n      children: \"Appearance\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The background colour of the pagination bar can be customized by adding a background colour to the parent element. The \", _jsx(_components.code, {\n        children: \"appearance\"\n      }), \" attribute can be set to \", _jsx(_components.code, {\n        children: \"light\"\n      }), \" or \", _jsx(_components.code, {\n        children: \"dark\"\n      }), \" to change the appearance of the pagination bar labels.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.Appearance\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"appearance-code-example\",\n      children: \"Appearance code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<div style=\\\"background-color: var(--ic-architectural-black)\\\">\\n  <ic-pagination-bar\\n    total-items=\\\"100\\\"\\n    appearance=\\\"light\\\"\\n    show-items-per-page-control=\\\"true\\\"\\n    show-go-to-page-control=\\\"true\\\"\\n  ></ic-pagination-bar>\\n</div>\\n\\n<div style=\\\"background-color: var(--ic-status-info-contrast)\\\">\\n  <ic-pagination-bar\\n    total-items=\\\"100\\\"\\n    appearance=\\\"dark\\\"\\n    show-items-per-page-control=\\\"true\\\"\\n    show-go-to-page-control=\\\"true\\\"\\n  ></ic-pagination-bar>\\n</div>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"hide-range-label\",\n      children: \"Hide range label\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If the pagination bar becomes cluttered due to the number of pagination elements displayed, the range label can be hidden by setting the \", _jsx(_components.code, {\n        children: \"hide-range-label\"\n      }), \" attribute to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.HideRangeLabel\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"hide-range-label-code-example\",\n      children: \"Hide range label code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<div style=\\\"background-color: var(--ic-architectural-100)\\\">\\n  <ic-pagination-bar\\n    total-items=\\\"100\\\"\\n    appearance=\\\"dark\\\"\\n    hide-range-label=\\\"true\\\"\\n    show-items-per-page-control=\\\"true\\\"\\n    show-go-to-page-control=\\\"true\\\"\\n  ></ic-pagination-bar>\\n</div>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"hide-all-from-items-per-page\",\n      children: \"Hide 'All' from items per page\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you have a predefined list of items you want in the itemsPerPage select, the 'All' option can be hidden by setting \", _jsx(_components.code, {\n        children: \"hide-all-from-items-per-page\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.HideAllFromItemsPerPage\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"hide-all-from-items-per-page-code-example\",\n      children: \"Hide 'All' from items per page code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n  hide-all-from-items-per-page=\\\"true\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"set-to-first-page-when-items-per-page-changes\",\n      children: \"Set to first page when items per page changes\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you have a predefined list of items you want in the itemsPerPage select, the 'All' option can be hidden by setting \", _jsx(_components.code, {\n        children: \"hide-all-from-items-per-page\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"true\"\n      }), \".\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        of: IcPaginationBarStories.SetToFirstPageWhenItemsPerPageChanges\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"set-to-first-page-when-items-per-page-changes-code-example\",\n      children: \"Set to first page when items per page changes code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n  hide-all-from-items-per-page=\\\"true\\\"\\n  set-to-first-page-on-pagination-change=\\\"true\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"set-the-selected-items-per-page\",\n      children: \"Set the selected items per page\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"selected-items-per-page\"\n      }), \" prop can be used to programmatically set the items per page dropdown option.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        name: \"Set the selected items per page\",\n        children: html`<div style=\"height:150px\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n        selected-items-per-page=\"25\"\n      ></ic-pagination-bar>\n    </div>`\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"set-the-selected-items-per-page-code-example\",\n      children: \"Set the selected items per page code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n  selected-items-per-page=\\\"25\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"set-the-selected-items-per-page-to-an-invalid-value\",\n      children: \"Set the selected items per page to an invalid value\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"selected-items-per-page\"\n      }), \" prop can be used to programmatically set the selected items per page dropdown option. If provided, this prop must match one of the items per page dropdown options, otherwise an error appears on the console and the prop is ignored.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        name: \"Set the selected items per page to an invalid value\",\n        children: html`<div style=\"height:150px\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n        selected-items-per-page=\"99\"\n      ></ic-pagination-bar>\n    </div>`\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"set-the-selected-items-per-page-to-an-invalid-value-code-example\",\n      children: \"Set the selected items per page to an invalid value code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n  selected-items-per-page=\\\"99\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"set-the-current-page\",\n      children: \"Set the current page\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"current-page\"\n      }), \" prop can be used to programmatically set the current page.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        name: \"Set the current page\",\n        children: html`<div style=\"height:150px\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n        current-page=\"3\"\n      ></ic-pagination-bar>\n    </div>`\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"set-the-current-page-code-example\",\n      children: \"Set the current page code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n  current-page=\\\"3\\\"\\n></ic-pagination-bar>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"set-the-current-page-to-an-invalid-value\",\n      children: \"Set the current page to an invalid value\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"current-page\"\n      }), \" prop can be used to programmatically set the current page. If provided, this prop must be greater than 0 and less than or equal to the total number of pages, otherwise an error appears on the console and the prop is ignored.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      withSource: \"none\",\n      children: _jsx(Story, {\n        name: \"Set the current page to an invalid value\",\n        children: html`<div style=\"height:150px\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n        current-page=\"-1\"\n      ></ic-pagination-bar>\n    </div>`\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"set-the-current-page-to-an-invalid-value-code-example\",\n      children: \"Set the current page to an invalid value code example\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<ic-pagination-bar\\n  total-items=\\\"100\\\"\\n  show-items-per-page-control=\\\"true\\\"\\n  show-go-to-page-control=\\\"true\\\"\\n  current-page=\\\"-1\\\"\\n></ic-pa\\n\"\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","import readme from \"./readme.md\";\nimport { html } from \"lit-html\";\n\nexport default {\n  title: \"Web Components/Pagination Bar\",\n  component: \"ic-pagination-bar\",\n\n  parameters: {\n    componentAPI: {\n      data: readme,\n    },\n  },\n};\n\nexport const Basic = {\n  render: () =>\n    html`<div style=\"height: 120px;\">\n      <ic-pagination-bar total-items=\"100\"></ic-pagination-bar>\n    </div>`,\n  name: \"Basic\",\n};\n\nexport const ItemsPerPageControl = {\n  render: () =>\n    html`<div style=\"height: 150px;\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Items per page control\",\n};\n\nexport const GoToPageControl = {\n  render: () =>\n    html`<div style=\"height: 120px;\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-go-to-page-control=\"true\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Go to page control\",\n};\n\nexport const PaginationRangeLabelType = {\n  render: () =>\n    html`<div style=\"height: 150px;\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n        range-label-type=\"data\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Pagination range label type\",\n};\n\nexport const PaginationItemLabel = {\n  render: () =>\n    html`<div style=\"height: 150px;\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n        range-label-type=\"data\"\n        item-label=\"Image\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Pagination item label\",\n};\n\nexport const PaginationType = {\n  render: () =>\n    html`<div style=\"height: 150px;\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        type=\"complex\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Pagination type\",\n};\n\nexport const AlignmentLeft = {\n  render: () =>\n    html`<div style=\"height: 150px;\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        alignment=\"left\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Alignment left\",\n};\n\nexport const AlignmentSpaceBetween = {\n  render: () =>\n    html`<div style=\"height: 150px;\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        alignment=\"space-between\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Alignment space between\",\n};\n\nexport const Appearance = {\n  render: () =>\n    html`<div\n      style=\"display: flex; flex-direction: column; gap: 8px; height: 220px\"\n    >\n      <div style=\"background-color: var(--ic-architectural-black)\">\n        <ic-pagination-bar\n          total-items=\"100\"\n          appearance=\"light\"\n          show-items-per-page-control=\"true\"\n          show-go-to-page-control=\"true\"\n        ></ic-pagination-bar>\n      </div>\n      <div style=\"background-color: var(--ic-status-info-contrast)\">\n        <ic-pagination-bar\n          total-items=\"100\"\n          appearance=\"dark\"\n          show-items-per-page-control=\"true\"\n          show-go-to-page-control=\"true\"\n        ></ic-pagination-bar>\n      </div>\n    </div>`,\n\n  name: \"Appearance\",\n};\n\nexport const HideRangeLabel = {\n  render: () =>\n    html`<div style=\"height:150px\">\n      <div style=\"background-color: var(--ic-architectural-100)\">\n        <ic-pagination-bar\n          total-items=\"100\"\n          appearance=\"dark\"\n          hide-range-label=\"true\"\n          show-items-per-page-control=\"true\"\n          show-go-to-page-control=\"true\"\n        ></ic-pagination-bar>\n      </div>\n    </div>`,\n\n  name: \"Hide range label\",\n};\n\nexport const HideAllFromItemsPerPage = {\n  render: () =>\n    html`<div style=\"height:150px\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n        hide-all-from-items-per-page=\"true\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Hide all from items per page\",\n};\n\nexport const SetToFirstPageWhenItemsPerPageChanges = {\n  render: () =>\n    html`<div style=\"height:150px\">\n      <ic-pagination-bar\n        total-items=\"100\"\n        show-items-per-page-control=\"true\"\n        show-go-to-page-control=\"true\"\n        hide-all-from-items-per-page=\"true\"\n        set-to-first-page-on-pagination-change=\"true\"\n      ></ic-pagination-bar>\n    </div>`,\n\n  name: \"Set to first page when items per page changes\",\n};\n"],"names":[],"sourceRoot":""}